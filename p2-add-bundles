#!/bin/sh
#
# Copyright 2011 Brian de Alwis
# Licensed under the Eclipse Public License v1.0
# http://www.eclipse.org/org/documents/epl-v10.php
#
P2HOME=${P2HOME:?P2HOME is not set}
ECLIPSEHOME=${ECLIPSEHOME:?ECLIPSEHOME is not set}
. $P2HOME/tools.sh || exit -1

usage()
{
    eval 1>&2
    echo "Install the provided bundles into the listed repository"
    echo
    echo "use: $progname [-v] repo {bundle | bundle.jar} ..."
    echo "   -v   be verbose"
    exit 1
}

while getopts v c; do
    case $c in
    v)  verbose=true;;
    \?)	usage;;
    esac
done
shift `expr $OPTIND - 1`

if [ $# -lt 2 ]; then
    usage
fi

destRepo=$(checkOrCreateLocalP2Repo "$1") || exit 1
shift 1

tmp=$(mktemp -d -t p2.XXXXXX)
trap "rm -rf $tmp" 0 1 2 3 15
pluginsLoc="$tmp"
antXml="${tmp}/build.xml"
mkdir -p "${pluginsLoc}/plugins/" || exit 1

for bundle in "$@"; do
    bundleId=`osgiBundleName "$bundle"`
    bundleVersion=`osgiBundleVersion "$bundle"`
    if [ -z "$bundleId" -o -z "$bundleVersion" ]; then
	echo "ERROR: $bundle does not appear to be a bundle"
    elif [ -f "$bundle" ]; then
	cp "$bundle" "${pluginsLoc}/plugins/${bundleId}_${bundleVersion}.jar"
    elif [ -d "$bundle" ]; then
	cp -r "$bundle/" "${pluginsLoc}/plugins/${bundleId}_${bundleVersion}"
    else
	echo "ERROR: $bundle: expected file or directory"
    fi
done

cat <<EOF >$antXml
<project default="build">
  <target name="build">
    <p2.publish.featuresAndBundles
	repository="$destRepo"
	append="true"
	publishArtifacts="true">
	  <bundles dir="$pluginsLoc" />
    </p2.publish.featuresAndBundles>
  </target>
</project>
EOF

if [ "$verbose" = true ]; then
    echo "==> $antXml"
    cat "$antXml"
fi

runEclipse -application org.eclipse.ant.core.antRunner \
    -buildfile $antXml

